name: Build and Check

on:
  push:
    branches: ["main", "cicd", "release", "develop", "[0-9]+-*"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "1"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deny:
    name: Check dependencies/ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: "1.60.0"

  format:
    name: Check format with nightly rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --check

  base:
    needs: [format]
    name: Build, check and test
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - "1.60.0" # MSRV
          - stable
          - nightly
        include:
          - toolchain: stable
            components: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: ${{ matrix.components }}
      - name: Prepare
        if: matrix.toolchain != 'stable'
        run: |
          rustup toolchain install stable --no-self-update --component clippy
      - uses: Swatinem/rust-cache@v2.2.0
        with:
          key: ubuntu-latest_${{ matrix.toolchain }}"
      - name: Install valgrind
        run: sudo apt-get -y update && sudo apt-get -y install valgrind
      - name: Info
        run: |
          set -x
          uname -a
          pwd
          rustup --version
          rustup show
          rustup component list --installed
          valgrind --version
      - name: Build
        run: cargo build --all-features --release
      - name: Lint
        run: cargo +stable clippy --all-features --all-targets -- -D warnings
      - name: Test
        run: cargo test --all-features
      - name: Bench
        run: cargo bench --all-features
        env:
          "IAI_CALLGRIND_RUNNER": "/home/runner/work/iai-callgrind/iai-callgrind/target/release/iai-callgrind-runner"

  docs:
    needs: [base]
    name: Docs/ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2.2.0
      - name: Run doc tests
        run: cargo test --all-features --doc
      - name: Check Documentation
        run: cargo doc --all-features --no-deps --document-private-items
